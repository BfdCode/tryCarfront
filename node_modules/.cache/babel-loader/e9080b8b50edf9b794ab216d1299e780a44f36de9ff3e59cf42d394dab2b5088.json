{"ast":null,"code":"var _jsxFileName = \"/home/bfdc/front_tiers/carfront/src/components/CarList.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { SERVER_URL } from \"../Constants\";\nimport { DataGrid } from '@mui/x-data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CarList() {\n  _s();\n  const [cars, setCars] = useState([]);\n  const columns = [{\n    field: 'brand',\n    headerName: 'Marque',\n    width: 200\n  }, {\n    field: 'model',\n    headerName: 'Modèle',\n    width: 200\n  }, {\n    field: 'color',\n    headerName: 'Couleur',\n    width: 200\n  }, {\n    field: 'year',\n    headerName: 'Année',\n    width: 150\n  }, {\n    field: 'price',\n    headerName: 'Prix',\n    width: 150\n  }, {\n    field: '_links.self.href',\n    headerName: '',\n    filterable: false,\n    sortable: false,\n    renderCell: row => {\n      /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onDelClick(row.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this);\n    }\n  }];\n  useEffect(() => {\n    fetchCars();\n  }, []);\n  const fetchCars = () => {\n    fetch(SERVER_URL + 'api/cars').then(response => response.json()).then(data => setCars(data._embedded.cars)).catch(err => console.error(err));\n  };\n  const onDelClick = url => {\n    fetch(url, {\n      method: \"DELETE\"\n    }).then(response => fetchCars()).catch(err => console.error(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 500,\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: cars,\n      columns: columns,\n      disableSelectionOnClick: true,\n      getRowId: row => row._links.self.href\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n// return (\n// <div>\n//     <table>\n//         <tbody>\n//             {cars.map((car, index) => (\n//                 <tr key={index}>\n//                     <td>{car.brand}</td>\n//                     <td>{car.model}</td>\n//                     <td>{car.color}</td>\n//                     <td>{car.year}</td>\n//                     <td>{car.price}</td>\n//                 </tr>\n//             ))}\n//         </tbody>\n//     </table>\n// </div>\n// );\n\n// export default CarList;\n_s(CarList, \"/EQt6wAxOgtQYDavlJ/SWb5B/tI=\");\n_c = CarList;\nvar _c;\n$RefreshReg$(_c, \"CarList\");","map":{"version":3,"names":["useEffect","useState","SERVER_URL","DataGrid","jsxDEV","_jsxDEV","CarList","_s","cars","setCars","columns","field","headerName","width","filterable","sortable","renderCell","row","onClick","onDelClick","id","children","fileName","_jsxFileName","lineNumber","columnNumber","fetchCars","fetch","then","response","json","data","_embedded","catch","err","console","error","url","method","style","height","rows","disableSelectionOnClick","getRowId","_links","self","href","_c","$RefreshReg$"],"sources":["/home/bfdc/front_tiers/carfront/src/components/CarList.js"],"sourcesContent":["\nimport { useEffect, useState } from \"react\";\nimport { SERVER_URL } from \"../Constants\";\nimport { DataGrid } from '@mui/x-data-grid';\n\n\nexport function CarList() {\n    const [cars, setCars] = useState([]);\n    const columns = [\n        { field: 'brand', headerName: 'Marque', width: 200 },\n        { field: 'model', headerName: 'Modèle', width: 200 },\n        { field: 'color', headerName: 'Couleur', width: 200 },\n        { field: 'year', headerName: 'Année', width: 150 },\n        { field: 'price', headerName: 'Prix', width: 150 },\n        {\n            field: '_links.self.href',\n            headerName: '',\n            filterable: false,\n            sortable: false,\n            renderCell: row => {\n                <button onClick={() => onDelClick(row.id)}>Delete</button>\n            },\n        }\n    ];\n    useEffect(()=> {\n        fetchCars();\n    }, []);\n\n    const fetchCars = () => {\n        fetch(SERVER_URL + 'api/cars')\n        .then(response => response.json())\n        .then(data => setCars(data._embedded.cars))\n        .catch(err => console.error(err));\n    };\n\n    const onDelClick = url => {\n        fetch(url, { method: \"DELETE\" })\n        .then(response => fetchCars())\n        .catch(err => console.error(err));\n    };\n\n    return (\n        <div style={{ height: 500, width: '100%' }}>\n            <DataGrid\n                rows={cars}\n                columns={columns}\n                disableSelectionOnClick={true}\n                getRowId={row => row._links.self.href}\n            />\n        </div>\n    );\n}\n\n\n\n    // return (\n    // <div>\n    //     <table>\n    //         <tbody>\n    //             {cars.map((car, index) => (\n    //                 <tr key={index}>\n    //                     <td>{car.brand}</td>\n    //                     <td>{car.model}</td>\n    //                     <td>{car.color}</td>\n    //                     <td>{car.year}</td>\n    //                     <td>{car.price}</td>\n    //                 </tr>\n    //             ))}\n    //         </tbody>\n    //     </table>\n    // </div>\n    // );\n\n// export default CarList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}