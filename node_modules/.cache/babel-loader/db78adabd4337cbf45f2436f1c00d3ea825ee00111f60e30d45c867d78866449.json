{"ast":null,"code":"var _jsxFileName = \"/home/bfdc/front_tiers/carfront/src/components/CarList.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { SERVER_URL } from \"../Constants\";\nimport { DataGrid } from '@mui/x-data-grid';\nimport Snackbar from '@mui/material/Snackbar';\nimport AddCar from \"./AddCar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CarList() {\n  _s();\n  const [cars, setCars] = useState([]);\n  const [open, setOpen] = useState(false);\n  const columns = [{\n    field: 'brand',\n    headerName: 'Marque',\n    width: 200\n  }, {\n    field: 'model',\n    headerName: 'Modèle',\n    width: 200\n  }, {\n    field: 'color',\n    headerName: 'Couleur',\n    width: 200\n  }, {\n    field: 'year',\n    headerName: 'Année',\n    width: 150\n  }, {\n    field: 'price',\n    headerName: 'Prix',\n    width: 150\n  }, {\n    field: '_links.self.href',\n    headerName: '',\n    sortable: false,\n    filterable: false,\n    // renderCell: (row) => {    //des parenthese et non des crochets\n    //     <button onClick={() => onDelClick(row.id)}>Delete</button>\n    // },\n    renderCell: row => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onDelClick(row.id),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)\n  }];\n  useEffect(() => {\n    fetchCars();\n  }, []);\n  const fetchCars = () => {\n    fetch(SERVER_URL + 'api/cars').then(response => response.json()).then(data => setCars(data._embedded.cars)).catch(err => console.error(err));\n  };\n  const addCar = car => {\n    fetch(SERVER_URL + 'api/cars', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(car)\n    }).then(response => {\n      if (response.ok) {\n        fetchCars();\n      } else {\n        alert(\"something went wrong\");\n      }\n    }).catch(err => console.error(err));\n  };\n  const onDelClick = url => {\n    if (window.confirm(\"Are you sure to delete ?\")) {\n      fetch(url, {\n        method: \"DELETE\"\n      }).then(response => {\n        if (response.ok) {\n          fetchCars();\n          setOpen(true);\n        } else {\n          alert(\"something went wrong\");\n        }\n      }).catch(err => console.error(err));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AddCar, {\n      addCar: addCar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 500,\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: cars,\n        columns: columns,\n        disableRowSelectionOnClick: true,\n        getRowId: row => row._links.self.href\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: open,\n        autoHideDuration: 2000,\n        onClose: () => setOpen(false),\n        message: \"voiture suprimee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n\n// le premier redu \n\n//     // return (\n//     // <div>\n//     //     <table>\n//     //         <tbody>\n//     //             {cars.map((car, index) => (\n//     //                 <tr key={index}>\n//     //                     <td>{car.brand}</td>\n//     //                     <td>{car.model}</td>\n//     //                     <td>{car.color}</td>\n//     //                     <td>{car.year}</td>\n//     //                     <td>{car.price}</td>\n//     //                 </tr>\n//     //             ))}\n//     //         </tbody>\n//     //     </table>\n//     // </div>\n//     // );\n_s(CarList, \"OH+7Whk0tvwXHwlcQTvKJAJQ8rs=\");\n_c = CarList;\nvar _c;\n$RefreshReg$(_c, \"CarList\");","map":{"version":3,"names":["React","useEffect","useState","SERVER_URL","DataGrid","Snackbar","AddCar","jsxDEV","_jsxDEV","CarList","_s","cars","setCars","open","setOpen","columns","field","headerName","width","sortable","filterable","renderCell","row","onClick","onDelClick","id","children","fileName","_jsxFileName","lineNumber","columnNumber","fetchCars","fetch","then","response","json","data","_embedded","catch","err","console","error","addCar","car","method","headers","body","JSON","stringify","ok","alert","url","window","confirm","Fragment","style","height","rows","disableRowSelectionOnClick","getRowId","_links","self","href","autoHideDuration","onClose","message","_c","$RefreshReg$"],"sources":["/home/bfdc/front_tiers/carfront/src/components/CarList.js"],"sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { SERVER_URL } from \"../Constants\";\nimport { DataGrid } from '@mui/x-data-grid';\nimport Snackbar from '@mui/material/Snackbar';\nimport AddCar from \"./AddCar\";\n\n\nexport function CarList() {\n    const [cars, setCars] = useState([]);\n    const [open, setOpen] = useState(false);\n    const columns = [\n        { field: 'brand', headerName: 'Marque', width: 200 },\n        { field: 'model', headerName: 'Modèle', width: 200 },\n        { field: 'color', headerName: 'Couleur', width: 200 },\n        { field: 'year', headerName: 'Année', width: 150 },\n        { field: 'price', headerName: 'Prix', width: 150 },\n        {\n            field: '_links.self.href',\n            headerName: '',\n            sortable: false,\n            filterable: false,\n            // renderCell: (row) => {    //des parenthese et non des crochets\n            //     <button onClick={() => onDelClick(row.id)}>Delete</button>\n            // },\n            renderCell: row => (\n                <button onClick={() => onDelClick(row.id)}>Delete</button>\n            ),\n        }\n    ];\n\n    useEffect(()=> {\n        fetchCars();\n    }, []);\n\n    const fetchCars = () => {\n        fetch(SERVER_URL + 'api/cars')\n        .then(response => response.json())\n        .then(data => setCars(data._embedded.cars))\n        .catch(err => console.error(err));\n    };\n\n    const addCar = car => {\n        fetch(SERVER_URL + 'api/cars', {\n            method: \"POST\",\n            headers: { \"Content-Type\":\"application/json\" },\n            body: JSON.stringify(car),\n        })\n        .then(response => {\n            if (response.ok) {\n                fetchCars();\n            } else{\n                alert(\"something went wrong\");\n            }\n        })\n        .catch(err => console.error(err));\n    };\n\n    const onDelClick = url => {\n        if (window.confirm(\"Are you sure to delete ?\")){\n            fetch(url, { method: \"DELETE\" })\n            .then(response => {\n                if (response.ok) {\n                    fetchCars();\n                    setOpen(true);\n                } else{\n                    alert(\"something went wrong\");\n                }\n            })\n            .catch(err => console.error(err));\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <AddCar addCar={addCar} />\n            <div style={{ height: 500, width: '100%' }}>\n                <DataGrid\n                    rows={cars}\n                    columns={columns}\n                    disableRowSelectionOnClick={true}\n                    getRowId={(row) => row._links.self.href}\n                />\n                <Snackbar\n                    open={open}\n                    autoHideDuration={2000}\n                    onClose={() => setOpen(false)}\n                    message=\"voiture suprimee\"\n                />\n            </div>\n        </React.Fragment>\n    );\n}\n\n\n\n// le premier redu \n\n\n\n//     // return (\n//     // <div>\n//     //     <table>\n//     //         <tbody>\n//     //             {cars.map((car, index) => (\n//     //                 <tr key={index}>\n//     //                     <td>{car.brand}</td>\n//     //                     <td>{car.model}</td>\n//     //                     <td>{car.color}</td>\n//     //                     <td>{car.year}</td>\n//     //                     <td>{car.price}</td>\n//     //                 </tr>\n//     //             ))}\n//     //         </tbody>\n//     //     </table>\n//     // </div>\n//     // );\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}